using MyTelegramBot.Types;
using Telegram.Bot.Types;
using InlineQuery = MyTelegramBot.Types.InlineQuery;

namespace MyTelegramBot.Listeners;

public class AlmostOnTarget2Query : InlineQuery
{
    public AlmostOnTarget2Query(Bot bot) : base(bot)
    {
        Names = new[] { "/clear66step" };
        MessageToSend = "ü§ô –û—Ç–ª–∏—á–Ω–æ! üéØ –ú—ã —É–∂–µ —É —Ü–µ–ª–∏! –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ Username –∫–∞–Ω–∞–ª–∞, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ–º –ø—Ä–æ–¥–≤–∏–≥–∞—Ç—å, –≤ " +
                        "—Ç–∞–∫–æ–º –≤–∏–¥–µ: @channelüí° –ö–∞–Ω–∞–ª –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç–∫—Ä—ã—Ç—ã–º.";
        MessageLabel = "GetAddressInline2";
    }
}
public class CheckChannelExistence : InlineReply
{
    public CheckChannelExistence(Bot bot) : base(bot)
    {
        MessageLabel = "GetAddressInline2";
        
    }
    private bool ChannelExists()
    {
        //some logic  
        return false;
    }

    protected override string Run(Context context, CancellationToken cancellationToken)
    {
        if (ChannelExists())
        {
            MessageToSend = "üéØ –ö–∞–Ω–∞–ª —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω! üö® –í–ê–ñ–ù–û üö® –ï—Å–ª–∏ —É–¥–∞–ª–∏—Ç—å –±–æ—Ç–∞ @–¢–ê–ö–û–ì–û –∏–∑ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤, —Ç–æ" +
                            " –≤–∞—à –∫–∞–Ω–∞–ª –≤—ã–ø–∞–¥–µ—Ç –∏–∑ –≤—ã–¥–∞—á–∏ –∏ –≤—ã –ø–µ—Ä–µ—Å—Ç–∞–Ω–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤. ü§´ –° –≥–æ–¥–æ–≤–æ–π " +
                            "VIP-–ø–æ–¥–ø–∏—Å–∫–æ–π –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Å—Ä–∞–∑—É 2 –∫–∞–Ω–∞–ª–∞.";
            Buttons = new Dictionary<string, string>()
            {
                {"ü§† –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω–æ", "/continueFree"},
                {"üèÜ –ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ —Å—Ç–∞—Ç—É—Å–µ VIP", "/moreAboutVIP"}
            };
        }
        else
        {
            MessageToSend =
                "ü§Ø –¢–∞–∫–æ–≥–æ –∫–∞–Ω–∞–ª–∞ –≤ —Ç–≤–æ–µ –≤–ª–∞–¥–µ–Ω–∏–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –ü—Ä–æ–≤–µ—Ä—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, Username –∏ –æ—Ç–ø—Ä–∞–≤—å —Å–æ–æ–±—â–µ–Ω–∏–µ " +
                "–µ—â–µ —Ä–∞–∑!";
        }
        return base.Run(context, cancellationToken);
    }
}