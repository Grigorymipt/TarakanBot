using MyTelegramBot.Types;

namespace MyTelegramBot.Listeners;

public class MyVipStatusQuery : Query, IListener
{
    public MyVipStatusQuery(Bot bot) : base(bot)
    {
        Names = new[] { "/myVipStatus" };
        MessageToSend = "üèÜ VIP —Å—Ç–∞—Ç—É—Å\n" +
                        "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞–Ω–∞–ª:";
        Buttons = new Dictionary<string, string>();
    }

    protected override string Run(Context context, CancellationToken cancellationToken)
    {
        foreach (var variableChannel in Database.GetUser(context.Update.CallbackQuery.From.Id).Channels)
        {
            Buttons.Add(variableChannel, "/getVipStatusForChannel " + variableChannel);
        }
        return base.Run(context, cancellationToken);
    }
}

public class GetVipStatusFotChannelQuery : Query, IListener
{
    public GetVipStatusFotChannelQuery(Bot bot) : base(bot)
    {
        Names = new[] { "/getVipStatusForChannel" };
        Buttons = new Dictionary<string, string>();
    }

    protected override string Run(Context context, CancellationToken cancellationToken)
    {
        var channel = Database.GetChannel(
            ArgumentParser.Parse(context.Update.CallbackQuery.Data).ArgumentsText);
        DateOnly today = DateOnly.FromDateTime(DateTime.Now);
        if (channel != null)
        {
            if (channel.Vip.CompareTo(today) < 0)
            {
                MessageToSend = "üèÜ –î–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ VIP –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–±—Ä–∞—Ç—å —Ç–∞—Ä–∏—Ñ";
                Buttons.Add("$50 –≤ –º–µ—Å—è—Ü", "/payForMonth");//TODO: –æ–ø—è—Ç—å –∂–µ –ø–ª–∞—Ç–µ–∂–∫–∞ —Å–µ—Ä–≥–µ—è
                Buttons.Add("$500 –≤ –≥–æ–¥",  "/payForYear");
            }
            else
            {
                MessageToSend = $"üèÜ VIP —Å—Ç–∞—Ç—É—Å –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –¥–æ {channel.Vip}. \n" +
                                "üí° –†–µ–∫–æ–º–µ–Ω–¥—É—é –≤–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ –ø—Ä–æ–¥–ª–µ–Ω–∏–µ. \n" +
                                "–ï—Å–ª–∏ –Ω–∏ –æ–¥–∏–Ω –∫–∞–Ω–∞–ª –Ω–µ –∏–º–µ–µ—Ç —Å—Ç–∞—Ç—É—Å VIP, —Ç–æ –º–æ–∂–Ω–æ –ø–æ—Ç–µ—Ä—è—Ç—å –ø–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∏–µ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è!\n";
            }
        }
        return base.Run(context, cancellationToken);
    }
}