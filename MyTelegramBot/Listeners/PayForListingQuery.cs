using Microsoft.Extensions.Localization;
using MyTelegramBot.Types;
using Telegram.Bot;
using Telegram.Bot.Types;
using Telegram.Bot.Types.Enums;
using Telegram.Bot.Types.Payments;
using Telegram.Bot.Types.ReplyMarkups;

namespace MyTelegramBot.Listeners;

public class PayForListingQuery : Query, IListener
{
    public PayForListingQuery(Bot bot) : base(bot)
    {
        Names = new[] { "/payForListing" };
        MessageToSend = new string[] {"üëå –•–æ—Ä–æ—à–æ! –ß—Ç–æ –±—ã –æ–ø–ª–∞—Ç–∏—Ç—å –ª–∏—Å—Ç–∏–Ω–≥ –∫–Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–¥–µ–ª–∞—Ç—å –ø–µ—Ä–µ–≤–æ–¥ –Ω–∞ 100 usdt –≤ —Å–µ—Ç–∏ Bep-20 " +
                        "–Ω–∞ –∞–¥—Ä–µ—Å –∫–æ—à–µ–ª—å–∫–∞: 0x967dcty64su65.......... –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –º–Ω–µ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ —Ö—ç—à —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∏–ª–∏" +
                        " –∞–¥—Ä–µ—Å –∫–æ—à–µ–ª—å–∫–∞! üí°–í–∞–∂–Ω–æ! –õ—é–±—ã–µ –∞–∫—Ç–∏–≤—ã –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –≤ –¥—Ä—É–≥–∏—Ö —Å–µ—Ç—è—Ö –º–æ–≥—É—Ç –±—ã—Ç—å –ø–æ—Ç–µ—Ä—è–Ω—ã –Ω–∞–≤—Å–µ–≥–¥–∞. "
                        };
    }
    protected override string Run(Context context, CancellationToken cancellationToken, out Dictionary<string, string> buttons)
    {
        buttons = new Dictionary<string, string>() { {"–Ø –æ—Ç–ø—Ä–∞–≤–∏–ª –ø–ª–∞—Ç–µ–∂ –Ω–∞ —É–∫–∞–∑–∞–Ω—ã–π –∞–¥—Ä–µ—Å","/iPaid"} };
        return MessageToSend[0];
    }
}
public class BuyListingNow : Query, IListener
{
    IEnumerable<LabeledPrice> prices;
    public BuyListingNow(Bot bot) : base(bot)
    {
        Names = new[] { "/buyListingNow" };
        MessageToSend = new string[] {"–¢—É—Ç –°–µ—Ä–≥–µ–π –ø–æ–¥–∫–∞—Ç—ã–≤–∞–µ—Ç –ø–ª–∞—Ç–µ–∂–∫—É —Å –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ–º @wallet. –° –º–µ–Ω—è –∫–Ω–æ–ø–æ—á–∫–∞ —Ç–æ–≤–∞—Ä–∞."
        };
        prices = new[]
        {
            new LabeledPrice("Listing", 10000)
        };
    }
    protected override string Run(Context context, CancellationToken cancellationToken)
    {
        return MessageToSend[0];
    }
    public override async Task Handler(Context context, CancellationToken cancellationToken)
    {
        var amount = 0.01;
        var link = await Crypto.CreateOrder.PostAsync(
            "TON",
            amount.ToString(),
            "some description",
            customData: context.Update.CallbackQuery.From.Id + "ListingPayload",
            externalId: "0", //TODO REMOVE!!!
            timeoutSeconds: 120,
            customerTelegramUserId: (int)context.Update.CallbackQuery.From.Id,
            WpayStoreApiKey: Environment.GetEnvironmentVariable("WpayStoreApiKey")
        );
        var buttons = new Dictionary<string, string>(){};
        string response = Task.Run(() => Run(context, cancellationToken, out buttons)).Result;
        Int64 chatId = context.Update.CallbackQuery.Message.Chat.Id;
        List<IEnumerable<InlineKeyboardButton>> categoryList = new List<IEnumerable<InlineKeyboardButton>>();

        InlineKeyboardButton reply;
        try
        {
            // Console.WriteLine("");
            reply = InlineKeyboardButton
                .WithUrl("–û–ø–ª–∞—Ç–∏—Ç—å", link);
        }
        catch(Exception ex)
        {
            throw ex;
        }

        IEnumerable<InlineKeyboardButton> inlineKeyboardButton = new[] { reply };
        categoryList.Add(inlineKeyboardButton);

        IEnumerable<IEnumerable<InlineKeyboardButton>> enumerableList1 = categoryList;
        InlineKeyboardMarkup inlineKeyboardMarkup = new InlineKeyboardMarkup(enumerableList1);

        Message sentMessage = await context.BotClient.SendTextMessageAsync(
            chatId: chatId,
            text: response,
            parseMode: Config.ParseMode,
            replyMarkup: inlineKeyboardMarkup
        );
    }


        // var invoiceAsync = await context.BotClient.SendInvoiceAsync(
        //     chatId: context.Update.CallbackQuery.Message.Chat.Id,
        //     title: "–õ–∏—Å—Ç–∏–Ω–≥",
        //     description: "–û–ø–ª–∞—Ç–∏—Ç—å –ª–∏—Å—Ç–∏–Ω–≥ –∫–∞–Ω–∞–ª–∞",
        //     payload: "ListingPayload",
        //     providerToken: Environment.GetEnvironmentVariable("providerToken"),
        //     currency: "RUB",
        //     prices: prices,
        //     cancellationToken: cancellationToken
        //     );
    
}

public class ContinueToRW : Query, IListener // TODO: make abstract listener for payments
{
    public ContinueToRW(Bot bot) : base(bot)
    {
        Names = new[] {"/whatLike"};
        MessageToSend = new string[] {
                        "üëãüòé –ü–æ–∑–¥—Ä–∞–≤–ª—è—é, –∫–∞–Ω–∞–ª @jhvuy —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–∞—Ç–∞–ª–æ–≥! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∫–æ–º—å—é–Ω–∏—Ç–∏ " +
                        "–±–ª–æ–≥–µ—Ä–æ–≤ Telegram. –° –ø–æ–º–æ—â—å—é #UserHub —Ç—ã —Å–º–æ–∂–µ—à—å: \n- –º–Ω–æ–≥–æ–∫—Ä–∞—Ç–Ω–æ —É–≤–µ–ª–∏—á–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ " +
                        "—á–∏—Ç–∞—Ç–µ–ª–µ–π –∏ –æ—Ö–≤–∞—Ç—ã –≤ —Å–≤–æ–µ–º Telegram-–∫–∞–Ω–∞–ª–µ, –∏–ª–∏ –±—ã—Å—Ç—Ä–æ —Ä–∞—Å–∫—Ä—É—Ç–∏—Ç—å Telegram-–∫–∞–Ω–∞–ª —Å –Ω—É–ª—è; \n" +
                        "- —É–∑–Ω–∞—Ç—å –æ –Ω–æ–≤—ã—Ö —Å–ø–æ—Å–æ–±–∞—Ö –º–æ–Ω–µ—Ç–∏–∑–∞—Ü–∏–∏ –∏ –ø—Ä–∏–º–µ–Ω–∏—Ç—å –∏—Ö –≤ —Å–≤–æ–µ–º –∫–∞–Ω–∞–ª–µ; \n- –æ–±—â–∞—Ç—å—Å—è –≤ –∑–∞–∫—Ä—ã—Ç–æ–º " +
                        "—á–∞—Ç–µ —Å –¥—Ä—É–≥–∏–º–∏ –±–ª–æ–≥–µ—Ä–∞–º–∏, –æ–±–º–µ–Ω–∏–≤–∞—Ç—å—Å—è –æ–ø—ã—Ç–æ–º, —Å–æ–∑–¥–∞–≤–∞—Ç—å —Å–æ–≤–º–µ—Å—Ç–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã; \n" +
                        "- –ø–æ–ª—É—á–∞—Ç—å –µ–∂–µ–º–µ—Å—è—á–Ω—ã–π –≤—ã—Å–æ–∫–∏–π –¥–æ—Ö–æ–¥ –±–ª–∞–≥–æ–¥–∞—Ä—è —Å–∏—Å—Ç–µ–º–µ #10—Ä—É–∫–æ–ø–æ–∂–∞—Ç–∏–π #UserHub \n " +
                        "üëÄ –¢–∞–∫–∂–µ, –≤ –±–ª–∏–∂–∞–π—à–µ–º –±—É–¥—É—â–µ–º:\n" +
                        "- –±–µ–∑–æ–ø–∞—Å–Ω–æ –ø–æ–∫—É–ø–∞—Ç—å –∏ –ø—Ä–æ–¥–∞–≤–∞—Ç—å —Ä–µ–∫–ª–∞–º–Ω—ã–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏;\n" +
                        "- –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —É—Å–ª—É–≥–∞–º–∏ –≥–∞—Ä–∞–Ω—Ç–∞ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–π —Å–¥–µ–ª–∫–∏ –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ –∏–ª–∏ –ø—Ä–æ–¥–∞–∂–µ –∫–∞–Ω–∞–ª–∞;\n" +
                        "- –Ω–∞–π—Ç–∏ –∫–æ–ø–∏—Ä–∞–π—Ç–µ—Ä–∞, –¥–∏–∑–∞–π–Ω–µ—Ä–∞ –∏–ª–∏ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –ø–æ —Ä–µ–∫–ª–∞–º–µ –≤ —Å–≤–æ—é –∫–æ–º–∞–Ω–¥—É;\n" +
                        "- –ø–æ–ª—É—á–∞—Ç—å –ø–∞—Ä—Ç–Ω—ë—Ä—Å–∫–æ–µ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ –æ—Ç –≤—Å–µ—Ö –∫–æ–º–∏—Å—Å–∏–π –Ω–∞ –Ω–æ–≤—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã —Å–µ—Ä–≤–∏—Å–∞ #UserHub.\n" +
                        "üïπ –ü–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Å–µ—Ä–≤–∏—Å–æ–º –º–æ–∂–Ω–æ –∞–±—Å–æ–ª—é—Ç–Ω–æ –±–µ—Å–ø–ª–∞—Ç–Ω–æ, –Ω–æ –¥–ª—è —ç—Ç–æ–≥–æ —Ç–µ–±–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ " +
                        "–ø—Ä–æ–π—Ç–∏ –Ω–µ–±–æ–ª—å—à–æ–π –∫–≤–µ—Å—Ç. –û–±–µ—â–∞—é, —É–∂–µ –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–º —à–∞–≥–µ —è —Ä–∞—Å–∫—Ä–æ—é —Å–µ–∫—Ä–µ—Ç –∫–∞–∫ –ø–æ–ª—É—á–∏—Ç—å " +
                        "–ø–µ—Ä–≤—ã–π 1.000.000 –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –Ω–∞ —Å–≤–æ–π Telegram-–∫–∞–Ω–∞–ª –Ω–µ –≤–ª–æ–∂–∏–≤ –Ω–∏ —Ä—É–±–ª—è. \n" +
                        "üßê –ö—Å—Ç–∞—Ç–∏, —á—Ç–æ —Ç–µ–±–µ –Ω—Ä–∞–≤–∏—Ç—Å—è –±–æ–ª—å—à–µ, —Å–º–æ—Ç—Ä–µ—Ç—å —Ñ–∏–ª—å–º—ã –∏–ª–∏ —á–∏—Ç–∞—Ç—å –∫–Ω–∏–≥–∏?",
                        "–¢—ã –Ω–µ —Ä–µ–ø–æ—Å—Ç–Ω—É–ª –∑–∞–ø–∏—Å—å, –∏–ª–∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ –µ—â–µ –Ω–µ –ø—Ä–æ—à–ª–∞",
        };
        
    }
    protected override string Run(Context context, CancellationToken cancellationToken, out Dictionary<string, string> buttons)
    {
        if(ChannelInfo.CheckMessageAutor("TestForTestingAndTestingForTest", 5, 6).Result) 
        {
            buttons = new Dictionary<string, string>()
            {
                { "–°–º–æ—Ç—Ä–µ—Ç—å —Ñ–∏–ª—å–º—ã", "/watchMovies" },
                { "–ß–∏—Ç–∞—Ç—å –∫–Ω–∏–≥–∏", "/readBooks" }
            };
            Send.Photo(context, Environment.GetEnvironmentVariable("pathToMaterials") + "userhub.jpg", cancellationToken);
            return MessageToSend[0];
        }
        buttons = new Dictionary<string, string>();
        buttons.Add("–ü–æ–≤—Ç–æ—Ä–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É —Ä–µ–ø–æ—Å—Ç–∞", "/whatLike");
        return MessageToSend[1];
    }
}
public class ConfirmListingPayment : PayloadReply, IListener // TODO: make abstract listener for payments
{
    public ConfirmListingPayment(Bot bot) : base(bot)
    {
        Payload = "ListingPayload";
        MessageToSend = new[] {
            "üëãüòé –ü–æ–∑–¥—Ä–∞–≤–ª—è—é, –∫–∞–Ω–∞–ª @jhvuy —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–∞—Ç–∞–ª–æ–≥! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∫–æ–º—å—é–Ω–∏—Ç–∏ " +
            "–±–ª–æ–≥–µ—Ä–æ–≤ Telegram. –° –ø–æ–º–æ—â—å—é #UserHub —Ç—ã —Å–º–æ–∂–µ—à—å: \n- –º–Ω–æ–≥–æ–∫—Ä–∞—Ç–Ω–æ —É–≤–µ–ª–∏—á–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ " +
            "—á–∏—Ç–∞—Ç–µ–ª–µ–π –∏ –æ—Ö–≤–∞—Ç—ã –≤ —Å–≤–æ–µ–º Telegram-–∫–∞–Ω–∞–ª–µ, –∏–ª–∏ –±—ã—Å—Ç—Ä–æ —Ä–∞—Å–∫—Ä—É—Ç–∏—Ç—å Telegram-–∫–∞–Ω–∞–ª —Å –Ω—É–ª—è; \n" +
            "- —É–∑–Ω–∞—Ç—å –æ –Ω–æ–≤—ã—Ö —Å–ø–æ—Å–æ–±–∞—Ö –º–æ–Ω–µ—Ç–∏–∑–∞—Ü–∏–∏ –∏ –ø—Ä–∏–º–µ–Ω–∏—Ç—å –∏—Ö –≤ —Å–≤–æ–µ–º –∫–∞–Ω–∞–ª–µ; \n- –æ–±—â–∞—Ç—å—Å—è –≤ –∑–∞–∫—Ä—ã—Ç–æ–º " +
            "—á–∞—Ç–µ —Å –¥—Ä—É–≥–∏–º–∏ –±–ª–æ–≥–µ—Ä–∞–º–∏, –æ–±–º–µ–Ω–∏–≤–∞—Ç—å—Å—è –æ–ø—ã—Ç–æ–º, —Å–æ–∑–¥–∞–≤–∞—Ç—å —Å–æ–≤–º–µ—Å—Ç–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã; \n" +
            "- –ø–æ–ª—É—á–∞—Ç—å –µ–∂–µ–º–µ—Å—è—á–Ω—ã–π –≤—ã—Å–æ–∫–∏–π –¥–æ—Ö–æ–¥ –±–ª–∞–≥–æ–¥–∞—Ä—è —Å–∏—Å—Ç–µ–º–µ #10—Ä—É–∫–æ–ø–æ–∂–∞—Ç–∏–π #UserHub \n " +
            "üëÄ –¢–∞–∫–∂–µ, –≤ –±–ª–∏–∂–∞–π—à–µ–º –±—É–¥—É—â–µ–º:\n" +
            "- –±–µ–∑–æ–ø–∞—Å–Ω–æ –ø–æ–∫—É–ø–∞—Ç—å –∏ –ø—Ä–æ–¥–∞–≤–∞—Ç—å —Ä–µ–∫–ª–∞–º–Ω—ã–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏;\n" +
            "- –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —É—Å–ª—É–≥–∞–º–∏ –≥–∞—Ä–∞–Ω—Ç–∞ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–π —Å–¥–µ–ª–∫–∏ –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ –∏–ª–∏ –ø—Ä–æ–¥–∞–∂–µ –∫–∞–Ω–∞–ª–∞;\n" +
            "- –Ω–∞–π—Ç–∏ –∫–æ–ø–∏—Ä–∞–π—Ç–µ—Ä–∞, –¥–∏–∑–∞–π–Ω–µ—Ä–∞ –∏–ª–∏ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –ø–æ —Ä–µ–∫–ª–∞–º–µ –≤ —Å–≤–æ—é –∫–æ–º–∞–Ω–¥—É;\n" +
            "- –ø–æ–ª—É—á–∞—Ç—å –ø–∞—Ä—Ç–Ω—ë—Ä—Å–∫–æ–µ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ –æ—Ç –≤—Å–µ—Ö –∫–æ–º–∏—Å—Å–∏–π –Ω–∞ –Ω–æ–≤—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã —Å–µ—Ä–≤–∏—Å–∞ #UserHub.\n" +
            "üïπ –ü–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Å–µ—Ä–≤–∏—Å–æ–º –º–æ–∂–Ω–æ –∞–±—Å–æ–ª—é—Ç–Ω–æ –±–µ—Å–ø–ª–∞—Ç–Ω–æ, –Ω–æ –¥–ª—è —ç—Ç–æ–≥–æ —Ç–µ–±–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ " +
            "–ø—Ä–æ–π—Ç–∏ –Ω–µ–±–æ–ª—å—à–æ–π –∫–≤–µ—Å—Ç. –û–±–µ—â–∞—é, —É–∂–µ –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–º —à–∞–≥–µ —è —Ä–∞—Å–∫—Ä–æ—é —Å–µ–∫—Ä–µ—Ç –∫–∞–∫ –ø–æ–ª—É—á–∏—Ç—å " +
            "–ø–µ—Ä–≤—ã–π 1.000.000 –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –Ω–∞ —Å–≤–æ–π Telegram-–∫–∞–Ω–∞–ª –Ω–µ –≤–ª–æ–∂–∏–≤ –Ω–∏ —Ä—É–±–ª—è. \n" +
            "üßê –ö—Å—Ç–∞—Ç–∏, —á—Ç–æ —Ç–µ–±–µ –Ω—Ä–∞–≤–∏—Ç—Å—è –±–æ–ª—å—à–µ, —Å–º–æ—Ç—Ä–µ—Ç—å —Ñ–∏–ª—å–º—ã –∏–ª–∏ —á–∏—Ç–∞—Ç—å –∫–Ω–∏–≥–∏?"};
        
    }
    protected override string Run(Context context, CancellationToken cancellationToken, out Dictionary<string, string> buttons)
    {
        buttons = new Dictionary<string, string>()
        {
            { "–°–º–æ—Ç—Ä–µ—Ç—å —Ñ–∏–ª—å–º—ã", "/watchMovies" },
            { "–ß–∏—Ç–∞—Ç—å –∫–Ω–∏–≥–∏", "/readBooks" }
        };
        return MessageToSend[0];
    }
}